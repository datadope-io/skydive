// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AddIf2IfLinkPayload struct {
	ID string `json:"ID"`
}

type AddNetworkDevicePayload struct {
	ID      string `json:"ID"`
	Updated bool   `json:"Updated"`
}

type EventInput struct {
	Device  string     `json:"Device"`
	Source  string     `json:"Source"`
	Payload string     `json:"Payload"`
	Time    *time.Time `json:"Time"`
}

type EventPayload struct {
	Ok    bool    `json:"Ok"`
	Error *string `json:"Error"`
}

type If2IfLinkInput struct {
	SrcDevice    string     `json:"SrcDevice"`
	SrcInterface string     `json:"SrcInterface"`
	DstDevice    string     `json:"DstDevice"`
	DstInterface string     `json:"DstInterface"`
	CreatedAt    *time.Time `json:"CreatedAt"`
}

type InterfaceInput struct {
	Name        string  `json:"Name"`
	Aggregation *string `json:"Aggregation"`
}

type NetworkDeviceInput struct {
	Name       string            `json:"Name"`
	Type       *string           `json:"Type"`
	Vendor     *string           `json:"Vendor"`
	Model      *string           `json:"Model"`
	Interfaces []*InterfaceInput `json:"Interfaces"`
	CreatedAt  *time.Time        `json:"CreatedAt"`
}
