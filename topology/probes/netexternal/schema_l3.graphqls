"""
Values to create a new Router
"""
input RouterInput {
  """
  Router name. Used as the primary key.
  """
  Name: String!
  """
  Vendor of the switch, eg.: Cisco, Juniper
  """
  Vendor: String
  """
  Switch model, eg.: CBS250-8P-E-2G
  """
  Model: String
  """
  Interfaces/ports of the router
  Undeclared intefaces already present are not deleted.
  Interfaces already present are updated.
  """
  Interfaces: [InterfaceInput]
  """
  Routing table. Each element represents a different VRF.
  """
  RoutingTable: [VRFRouteTable!]
  """
  Campo opcional donde forzamos la fecha de creación del dispositivo a un momento determinado del pasado.
  En caso de no definirse se usará la fecha actual.
  """
  CreatedAt: Time
}

input VRFRouteTable {
  """
  VRF name. If not defined will take value "default"
  """
  VRF: String = "default"
  Routes: [Route!]!
}

"""
IP route.
Network could be specified with CIDR or IP+mask
"""
input Route {
  """
  Specify the network matching using CIDR
  """
  CIDR: String
  """
  Specify the network matching using IP+mask
  """
  IP: String
  Mask: String
  """
  Optinal name for this particular route
  """
  Name: String
  """
  Use a device as the next hop instead of an IP
  """
  DeviceNextHop: String
  """
  IP address for next hop
  """
  NextHop: String
}


"""
Level 3 (IP) configuration for interfaces
TODO: not tested with IPv6
"""
input InterfaceIPInput {
  IP: String!
  """
  IP mask, format: 255.255.255.0
  """
  Mask: String!
  """
  This L3 interface belongs to this VRF.
  """
  VRF: String = "default"
}


"""
Return value when creating a new Router.
"""
type AddRouterPayload {
  """
  Internal ID for the node in Skydive
  """
  ID: String!
  """
  Return true if a router with this name already exists
  and metadata values have been updated.
  """
  Updated: Boolean!
  """
  Return true if some interface of the router has been updated
  """
  InterfaceUpdated: Boolean!
}
